name: build and release
on:
  push:
    branches:
      - main
    paths:
      - "VERSION.txt"
jobs:
  release_archive:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0 # fetch all history for tags

      - name: Read version from VERSION.txt
        id: version
        run: |
          VERSION=$(tr -d ' \n' < VERSION.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "refs/tags/v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Install deps
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          sudo apt install -y zip

      - name: Setup Go
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: "stable"

      - name: Setup xcaddy
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build caddy with plugin
        if: steps.check_tag.outputs.exists == 'false'
        env:
          CGO_ENABLED: 0
          GOAMD64: v3
        run: |
          make zip

      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        id: create_release
        uses: shogo82148/actions-create-release@7b89596097b26731bda0852f1504f813499079ee # v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            This release (v${{ steps.version.outputs.version }}) was automatically generated from VERSION.txt update.

      - name: Upload assets
        if: steps.check_tag.outputs.exists == 'false'
        uses: shogo82148/actions-upload-release-asset@59cbc563d11314e48122193f8fe5cdda62ea6cf9 # v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: caddy-build.zip
          asset_content_type: application/zip
          overwrite: true
